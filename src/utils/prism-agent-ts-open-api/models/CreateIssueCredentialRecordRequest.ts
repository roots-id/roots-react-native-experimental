/* tslint:disable */
/* eslint-disable */
/**
 * PrismAgent OpenAPI specification
 * OpenAPI specification for Decentralized Identifiers (DID) Operations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: atala-coredid@iohk.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A request to create a new "issue credential record"
 * @export
 * @interface CreateIssueCredentialRecordRequest
 */
export interface CreateIssueCredentialRecordRequest {
    /**
     * Identifier of the VC Schema associated with this object
     * @type {string}
     * @memberof CreateIssueCredentialRecordRequest
     */
    schemaId?: string;
    /**
     * Subject DID of the verifiable credentials object
     * @type {string}
     * @memberof CreateIssueCredentialRecordRequest
     */
    subjectId: string;
    /**
     * The validity period in seconds of the verifiable credential
     * @type {number}
     * @memberof CreateIssueCredentialRecordRequest
     */
    validityPeriod?: number;
    /**
     * Claims that will be associated with given verifiable credentials
     * @type {{ [key: string]: string; }}
     * @memberof CreateIssueCredentialRecordRequest
     */
    claims: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof CreateIssueCredentialRecordRequest
     */
    automaticIssuance?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateIssueCredentialRecordRequest
     */
    awaitConfirmation?: boolean;
}

/**
 * Check if a given object implements the CreateIssueCredentialRecordRequest interface.
 */
export function instanceOfCreateIssueCredentialRecordRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "subjectId" in value;
    isInstance = isInstance && "claims" in value;

    return isInstance;
}

export function CreateIssueCredentialRecordRequestFromJSON(json: any): CreateIssueCredentialRecordRequest {
    return CreateIssueCredentialRecordRequestFromJSONTyped(json, false);
}

export function CreateIssueCredentialRecordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateIssueCredentialRecordRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schemaId': !exists(json, 'schemaId') ? undefined : json['schemaId'],
        'subjectId': json['subjectId'],
        'validityPeriod': !exists(json, 'validityPeriod') ? undefined : json['validityPeriod'],
        'claims': json['claims'],
        'automaticIssuance': !exists(json, 'automaticIssuance') ? undefined : json['automaticIssuance'],
        'awaitConfirmation': !exists(json, 'awaitConfirmation') ? undefined : json['awaitConfirmation'],
    };
}

export function CreateIssueCredentialRecordRequestToJSON(value?: CreateIssueCredentialRecordRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schemaId': value.schemaId,
        'subjectId': value.subjectId,
        'validityPeriod': value.validityPeriod,
        'claims': value.claims,
        'automaticIssuance': value.automaticIssuance,
        'awaitConfirmation': value.awaitConfirmation,
    };
}

